<?xml version="1.0" encoding="windows-1252"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          					http://www.springframework.org/schema/context
          					http://www.springframework.org/schema/context/spring-context-3.2.xsd
          					http://www.springframework.org/schema/jee
                            http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
          					http://www.springframework.org/schema/mvc
        					http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        					http://www.springframework.org/schema/tx
       						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <context:component-scan base-package="com.eBolivar.*">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>

    <context:component-scan base-package="com.eBolivar.web">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <context:component-scan base-package="com.eBolivar.service.*">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <context:component-scan base-package="com.eBolivar.validator">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>

    <context:component-scan base-package="com.eBolivar.dao">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <mvc:annotation-driven />

    <context:annotation-config/>



    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSourceJpa"/>
        <property name="packagesToScan" value="com.eBolivar.domain"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
        <property name="jpaPropertyMap">
        <map>
            <entry key="hibernate.hbm2ddl.auto" value="update"/>
        </map>
        </property>
    </bean>

    <jee:jndi-lookup jndi-name="java:comp/env/url" id="urlJndi"/>
    <jee:jndi-lookup jndi-name="java:comp/env/username" id="usernameJndi"/>
    <jee:jndi-lookup jndi-name="java:comp/env/password" id="passwordJndi"/>

    <bean id="dataSourceJpa" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" ref="urlJndi"/>
        <property name="user" ref="usernameJndi"/>
        <property name="password" ref="passwordJndi"/>
        <property name="idleConnectionTestPeriod" value="1" />

    </bean>

    <bean id="sessionFactoryJpa" class="org.springframework.orm.jpa.vendor.HibernateJpaSessionFactoryBean">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" depends-on="sessionFactoryJpa">
        <property name="sessionFactory" ref="sessionFactoryJpa"/>
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="mensajes"/>
    </bean>

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="environment">
            <bean class="org.springframework.web.context.support.StandardServletEnvironment"/>
        </property>
    </bean>

</beans>